# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER
$terminal = kitty
$menu = wofi --show=drun
$fileManager = nemo
$scriptsDir = ~/.config/hypr/scripts/

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, Return, exec, $terminal
bind = $mainMod SHIFT, Return, exec, ~/.config/tmux/on-open-tmux.sh
bind = $mainMod, Q, killactive, 
# bind = $mainMod, M, exit,
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, V, togglefloating, 
# bind = $mainMod, R, exec, $menu
bind = $mainMod, R, exec, killall wofi || $menu
bind = $mainMod, F, fullscreen, 1
# bind = $mainMod SHIFT, F, fullscreen, 0
bind = $mainMod ALT, F, fullscreenstate, 2 # doesnt work on chromium
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, N, togglesplit, # dwindle
bind = $mainMod SHIFT, G, exec, $scriptsDir/GameMode.sh # animations ON/OFF
bind = $mainMod, period, exec, killall rofimoji || rofimoji -a type 
bind = $mainMod CTRL SHIFT, L, exec, hyprlock # Lock the screen
bind = $mainMod, F12, exec, kalk
bind = $mainMod, W, exec, zen-browser --ProfileManager 
bind = $mainMod, B, exec, blueman-manager
# bind = $mainMod SHIFT, H, exec, hyprpanel -t settings-dialog

bind = $mainMod, space, exec, $scriptsDir/ChangeLayout.sh # Toggle Master or Dwindle Layout

# Master Layout
bind = $mainMod CTRL, D, layoutmsg, removemaster
bind = $mainMod, I, layoutmsg, addmaster
# bind = $mainMod, period, layoutmsg, cyclenext
# bind = $mainMod, comma, layoutmsg, cycleprev
# bind = $mainMod, M, exec, hyprctl dispatch splitratio 0.3
# bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod CTRL, Return, layoutmsg, swapwithmaster
bind = $mainMod SHIFT, M, exec, hyprctl dispatch splitratio -0.3

bind = CTRL ALT, Delete, exec, killall wlogout || wlogout --protocol layer-shell  # show the logout window
bind = $mainMod, X, exec, killall wlogout || wlogout --protocol layer-shell # show the logout window
bind = $mainMod SHIFT, S, exec, killall slurp || grim -g "$(slurp)" - | swappy -f - # take a screenshot
# bind = $mainMod, XF86SelectiveScreenshot, exec, $scriptsDir/screenshot.sh # take full screenshot
# hyprshot commands
# Screenshot a window
# bind = $mainMod, PRINT, exec, hyprshot -m window
# Screenshot a monitor
# bind = , PRINT, exec, hyprshot -m output
# Screenshot a region
bind = $mainMod SHIFT, PRINT, exec, hyprshot -m region
# XF86TouchpadToggle doesn't work
bind = , XF86TouchpadOn, exec, notify-send -h string:x-canonical-private-synchronous:tOucHpAd "Enable Touchpad" -t 2000
bind = , XF86TouchpadOff, exec, notify-send -h string:x-canonical-private-synchronous:tOucHpAd "Disable Touchpad" -t 2000

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d
bind = $mainMod, h, movefocus, l
bind = $mainMod, l, movefocus, r
bind = $mainMod, k, movefocus, u
bind = $mainMod, j, movefocus, d

# swapwindow
bind = $mainMod CTRL, left, swapwindow, l
bind = $mainMod CTRL, right, swapwindow, r
bind = $mainMod CTRL, up, swapwindow, u
bind = $mainMod CTRL, down, swapwindow, d
bind = $mainMod CTRL, h, swapwindow, l
bind = $mainMod CTRL, l, swapwindow, r
bind = $mainMod CTRL, k, swapwindow, u
bind = $mainMod CTRL, j, swapwindow, d

# preselect split window
bind = $mainMod ALT, left, layoutmsg, preselect l
bind = $mainMod ALT, right, layoutmsg, preselect r
bind = $mainMod ALT, up, layoutmsg, preselect u
bind = $mainMod ALT, down, layoutmsg, preselect d
bind = $mainMod ALT, h, layoutmsg, preselect l
bind = $mainMod ALT, l, layoutmsg, preselect r
bind = $mainMod ALT, k, layoutmsg, preselect u
bind = $mainMod ALT, j, layoutmsg, preselect d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Alt switch to workspace
bind = $mainMod SHIFT, semicolon, workspace, 1
bind = $mainMod SHIFT, l, workspace, 2
bind = $mainMod SHIFT, k, workspace, 3
bind = $mainMod SHIFT, j, workspace, 4
bind = $mainMod SHIFT, u, workspace, 5
bind = $mainMod SHIFT, i, workspace, 6
bind = $mainMod SHIFT, o, workspace, 7
bind = $mainMod SHIFT, p, workspace, 8
bind = $mainMod SHIFT ALT, semicolon, movetoworkspace, 1
bind = $mainMod SHIFT ALT, l, movetoworkspace, 2
bind = $mainMod SHIFT ALT, k, movetoworkspace, 3
bind = $mainMod SHIFT ALT, j, movetoworkspace, 4
bind = $mainMod SHIFT ALT, u, movetoworkspace, 5
bind = $mainMod SHIFT ALT, i, movetoworkspace, 6
bind = $mainMod SHIFT ALT, o, movetoworkspace, 7
bind = $mainMod SHIFT ALT, p, movetoworkspace, 8


# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod CTRL, S, movetoworkspace, special:magic
# TODO: implement stuffs for scratch scratchpad
bind = $mainMod, D, togglespecialworkspace, scratch
bind = $mainMod CTRL, D, movetoworkspace, special:scratch
bind = $mainMod ALT, D, exec, hyprctl dispatch movetoworkspace $(hyprctl activeworkspace | awk '(NR==1){print $3}')

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_up, workspace, e+1
bind = $mainMod, mouse_down, workspace, e-1
bind = $mainMod, Tab, workspace, e+1
bind = $mainMod SHIFT, Tab, workspace, e-1
bind = $mainMod, semicolon, workspace, previous

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Resize windows using keyboard
binde = $mainMod SHIFT, left, resizeactive,-50 0
binde = $mainMod SHIFT, right, resizeactive,50 0
binde = $mainMod SHIFT, up, resizeactive,0 -50
binde = $mainMod SHIFT, down, resizeactive,0 50

# wofi cliphist
bind = $mainMod CTRL, V, exec, cliphist list | wofi --dmenu | cliphist decode | wl-copy

# Volume and Media Control
binde = , XF86AudioRaiseVolume, exec, pamixer -i 5 && notify-send -e -h string:x-canonical-private-synchronous:mY_N0tiF -a "changeVolume" -u low -i audio-volume-high -h int:value:"$(pamixer --get-volume)" "Volume: $(pamixer --get-volume)%"
binde = , XF86AudioLowerVolume, exec, pamixer -d 5 && notify-send -e -h string:x-canonical-private-synchronous:mY_N0tiF -a "changeVolume" -u low -i audio-volume-high -h int:value:"$(pamixer --get-volume)" "Volume: $(pamixer --get-volume)%"
bind = , XF86AudioMicMute, exec, pamixer --default-source -t
bind = , XF86AudioMute, exec, pamixer -t
bind = , XF86AudioPlay, exec, playerctl play-pause
bind = , XF86AudioPause, exec, playerctl play-pause
bind = , XF86AudioNext, exec, playerctl next
bind = , XF86AudioPrev, exec, playerctl previous

# brightness
bind = ,XF86MonBrightnessDown, exec, brightnessctl set 5%- && dunstify -h string:x-canonical-private-synchronous:mY_N0tiF -a "changeBrightness" -u low -i preferences-system-brightness-lock -h int:value:"$(brightnessctl -m | awk -F, '{print substr($4, 0, length($4)-1)}')" "Brightness: $(brightnessctl -m | awk -F, '{print substr($4, 0, length($4)-1)}')%"
bind = ,XF86MonBrightnessUp, exec, brightnessctl set 5%+ && dunstify -h string:x-canonical-private-synchronous:mY_N0tiF -a "changeBrightness" -u low -i preferences-system-brightness-lock -h int:value:"$(brightnessctl -m | awk -F, '{print substr($4, 0, length($4)-1)}')" "Brightness: $(brightnessctl -m | awk -F, '{print substr($4, 0, length($4)-1)}')%"

bind = ,XF86AudioMicMute, exec, dunstify -h string:x-canonical-private-synchronous:m1c "Mic is $([[ $(pamixer --default-source --get-mute) == 'true' ]] && echo 'off' || echo 'on')"

# bind = $mainMod, asciitilde, exec, kill -s 9 $(pidof nwg-drawer)
bind = $mainMod CTRL, bracketleft, exec, dunstctl close-all
